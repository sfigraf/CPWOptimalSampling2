load("/Volumes/CPW_Work/Optimum Sampling/Ark_Sampling_bwa_test/ArkData.Rdata")
setwd("/Volumes/CPW_Work/Optimum Sampling/Ark_Sampling_bwa_test/ArcGIS_files/ArkansasR/AsShapefiles/")
## Read in the shapefiles:
# CO.rg <- readOGR(".", "Colorado_Boundary")
CO.rg <- read_sf(".", "Colorado_Boundary")
library(foreign) # to read and write .dbf files
library(xtable)  # to easily create LaTex tables
library(RColorBrewer)  # for color choices
# library(rgdal)  # for map creation, reading in shapefiles
library(sf)
library(sp)
# install.packages("terra", type = "source", configure.args = "--with-proj-lib=$(brew --prefix)/lib/")
library(SDMTools) # to add scale bar to maps
library(OpenStreetMap) # to get an underlying satellite image?
setwd("/Volumes/CPW_Work/Optimum Sampling/Ark_Sampling_bwa_test/ArcGIS_files/ArkansasR/AsShapefiles/")
## Read in the shapefiles:
# CO.rg <- readOGR(".", "Colorado_Boundary")
CO.rg <- read_sf(".", "Colorado_Boundary")
# elev1980.rg <- readOGR(".", "elev1980")
elev1980.rg <- read_sf(".", "elev1980")
# HUC.rg <- readOGR(".", "HUC4_AR")
HUC.rg <- read_sf(".", "HUC4_AR")
# I25.rg <- readOGR(".", "I25_Projected")
I25.rg <- read_sf(".", "I25_Projected")
# cities.rg <- readOGR(".", "ArkCities")
cities.rg <- read_sf(".", "ArkCities")
# noNullstreams.rg <- readOGR(".", "FlowlinesArk_NoNull")
noNullstreams.rg <- read_sf(".", "FlowlinesArk_NoNull")
# streams.rg <- readOGR(".", "SurveyDesignStreams")
streams.rg <- read_sf(".", "SurveyDesignStreams")
# streamAsPts.rg <- readOGR(".", "SurveyDesignStreamsAsPoints")
streamAsPts.rg <- read_sf(".", "SurveyDesignStreamsAsPoints")
# Check that all projections match
# print(proj4string(CO.rg))
st_crs(CO.rg)$proj4string
# print(proj4string(elev1980.rg))
st_crs(elev1980.rg)$proj4string
# elev1980.nad83 <- spTransform(elev1980.rg, CRS("+proj=utm +zone=13 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0"))
elev1980.nad83 <- st_transform(elev1980.rg, crs="+proj=utm +zone=13 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0")
# print(proj4string(elev1980.nad83))
st_crs(elev1980.nad83)$proj4string
# print(proj4string(HUC.rg))
st_crs(HUC.rg)$proj4string
# print(proj4string(I25.rg))
st_crs(I25.rg)$proj4string
# print(proj4string(noNullstreams.rg))
st_crs(noNullstreams.rg)$proj4string
# print(proj4string(streams.rg))
st_crs(streams.rg)$proj4string
# print(proj4string(streamAsPts.rg))
st_crs(streamAsPts.rg)$proj4string
# print(proj4string(cities.rg))
st_crs(cities.rg)$proj4string
# Map of sampling locations. Color-coded by ifelse PASSNO > 1
# generate a simple map showing all  layers
sites.sp <- sites # SampOccasions
# sites.sp$colPASSES <- ifelse(sites.sp$nSurveys > 1, "black", "gray")
# These functions need library(sp)
coordinates(sites.sp) <- c("UTMX", "UTMY")
proj4string(sites.sp) <- CRS("+proj=utm +zone=13 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0")
summary(sites.sp)
#plot(streams.rg, col="blue", lwd=2.0)
png("/Volumes/CPW_Work/Optimum Sampling/Ark_Sampling_bwa_test/EDA/Sites.png",
width=1024, height=768)
par(mar=c(0.01, 0.01, 0.01, 0.01))
# plot(HUC.rg, col=gray(0.9), border=gray(0.9), mar=c(0.1, 0.1, 0.1, 0.1))
plot(st_geometry(HUC.rg), col=gray(0.9), border=gray(0.9), mar=c(0.1, 0.1, 0.1, 0.1))
# plot(elev1980.nad83, add=T, col=gray(0.7), border=gray(0.7) )
plot(st_geometry(elev1980.nad83), add=T, col=gray(0.7), border=gray(0.7) )
# plot(CO.rg, border="black", add=T, lwd=3)
plot(st_geometry(CO.rg), border="black", add=T, lwd=3)
#lines(I25.rg, col="red", cex=0.8)
# lines(noNullstreams.rg, col=gray(0.5), lwd=0.8)
plot(st_geometry(streams.rg), add=T, col="dodgerblue3", lwd=2.0)
# add cities (circled)
# points(cities.rg, cex=2.8, col="limegreen", pch=6, lwd=5)
# add labels (using trial and error for placement)
#text(cities.rg, labels=as.character(cities.rg$NAME), col="black",
#     cex=1.7, font=2, offset=0.5, adj=c(1,2))
# Add the sampling locations:
points(subset(sites.sp, nSurveys = 1), col="black", pch=17, cex=1)
points(subset(sites.sp, nSurveys > 1), col="black", pch=8, cex=1.2)
# Add scale bar
Scalebar(646000, 4105000, 100000, unit = "km",
scale = 0.01, t.cex = 1.5)
# Add title
mtext("Arkansas River Basin", line=-2, cex=2)
dev.off()
#
rm(sites.sp)
# Map of elevations in the stream
huc <- list(HUC.rg, fill = gray(0.9))
elev <- list(elev1980.nad83)#, fill=gray(0.7))
l3 = list("SpatialPolygonsRescale", layout.scale.bar(),
offset = c(646000, 4104000), scale = 100000, fill=c("transparent","black"))
l4 = list("sp.text", c(646000, 4116000), "0", cex=0.8)
l4b = list("sp.text", c(696000, 4116000), "500", cex=0.8)
l5 = list("sp.text", c(746000, 4116000), "1000 km", cex=0.8)
png("/Volumes/CPW_Work/Optimum Sampling/Ark_Sampling_bwa_test/EDA/elevations.png",
width=1024, height=768)
spplot(streamAsPts.rg["elevation"],
sp.layout=list(l3, l4, l4b, l5, elev), #, huc, elev),
main=list(label="Elevation (m)", cex=1),
colorkey=T, cex=1, par.settings=list(fontsize=list(text=36)))
# Map of elevations in the stream
huc <- list(HUC.rg, fill = gray(0.9))
elev <- list(elev1980.nad83)#, fill=gray(0.7))
l3 = list("SpatialPolygonsRescale", layout.scale.bar(),
offset = c(646000, 4104000), scale = 100000, fill=c("transparent","black"))
l4 = list("sp.text", c(646000, 4116000), "0", cex=0.8)
l4b = list("sp.text", c(696000, 4116000), "500", cex=0.8)
l5 = list("sp.text", c(746000, 4116000), "1000 km", cex=0.8)
png("/Volumes/CPW_Work/Optimum Sampling/Ark_Sampling_bwa_test/EDA/elevations.png",
width=1024, height=768)
plot(st_geometry(streamAsPts.rg["elevation"]),
sp.layout=list(l3, l4, l4b, l5, elev), #, huc, elev),
main=list(label="Elevation (m)", cex=1),
colorkey=T, cex=1, par.settings=list(fontsize=list(text=36)))
?spplot()
spplot(streamAsPts.rg["elevation"],
sp.layout=list(l3, l4, l4b, l5, elev), #, huc, elev),
main=list(label="Elevation (m)", cex=1),
colorkey=T, cex=1, par.settings=list(fontsize=list(text=36)))
# spplot(streamAsPts.rg["elevation"],
#        sp.layout=list(l3, l4, l4b, l5, elev), #, huc, elev),
#        main=list(label="Elevation (m)", cex=1),
#        colorkey=T, cex=1, par.settings=list(fontsize=list(text=36)))
plot(st_geometry(streamAsPts.rg["elevation"]), main=list(label="Elevation (m)", cex=1))
# spplot(streamAsPts.rg["elevation"],
#        sp.layout=list(l3, l4, l4b, l5, elev), #, huc, elev),
#        main=list(label="Elevation (m)", cex=1),
#        colorkey=T, cex=1, par.settings=list(fontsize=list(text=36)))
plot(st_geometry(streamAsPts.rg["elevation"]))
dev.off()
# spplot(streamAsPts.rg["elevation"],
#        sp.layout=list(l3, l4, l4b, l5, elev), #, huc, elev),
#        main=list(label="Elevation (m)", cex=1),
#        colorkey=T, cex=1, par.settings=list(fontsize=list(text=36)))
plot(st_geometry(streamAsPts.rg["elevation"]))
# Map of elevations in the stream
huc <- list(HUC.rg, fill = gray(0.9))
elev <- list(elev1980.nad83)#, fill=gray(0.7))
l3 = list("SpatialPolygonsRescale", layout.scale.bar(),
offset = c(646000, 4104000), scale = 100000, fill=c("transparent","black"))
l4 = list("sp.text", c(646000, 4116000), "0", cex=0.8)
l4b = list("sp.text", c(696000, 4116000), "500", cex=0.8)
l5 = list("sp.text", c(746000, 4116000), "1000 km", cex=0.8)
png("/Volumes/CPW_Work/Optimum Sampling/Ark_Sampling_bwa_test/EDA/elevations.png",
width=1024, height=768)
# spplot(streamAsPts.rg["elevation"],
#        sp.layout=list(l3, l4, l4b, l5, elev), #, huc, elev),
#        main=list(label="Elevation (m)", cex=1),
#        colorkey=T, cex=1, par.settings=list(fontsize=list(text=36)))
plot(st_geometry(streamAsPts.rg["elevation"]))
?st_geometry()
plot(st_geometry(subset(streamAsPts.rg, acolumn=="elevation")))
library(ggplot2)
ggplot() +
geom_sf(data = streamAsPts.rg, aes(fill = elevation)) +  # Change 'elevation' to your actual column name
scale_fill_viridis_c(option = "plasma", name = "Elevation (m)", guide = "colorbar") +  # Adjust color scale
theme_minimal(base_size = 36) +  # Set base size for text
labs(title = "Elevation (m)") +
geom_sf(data = l3, color = "black") +  # Adjust to your lines' aesthetics
geom_sf(data = l4, color = "black") +
geom_sf(data = l4b, color = "black") +
geom_sf(data = l5, color = "black") +
# Optionally add your elev object if it's an sf object
geom_sf(data = elev, color = "black") +
theme(legend.position = "right")  # Adjust legend position if needed
# plot(st_geometry(streamAsPts.rg["elevation"]))
streamAsPts_sf <- st_as_sf(streamAsPts.rg)
ggplot() +
geom_sf(data = streamAsPts_sf, aes(fill = elevation)) +  # Change 'elevation' to your actual column name
scale_fill_viridis_c(option = "plasma", name = "Elevation (m)", guide = "colorbar") +  # Adjust color scale
theme_minimal(base_size = 36) +  # Set base size for text
labs(title = "Elevation (m)") +
geom_sf(data = l3, color = "Green") +  # Adjust to your lines' aesthetics
geom_sf(data = l4, color = "Red") +
geom_sf(data = l4b, color = "Blue") +
geom_sf(data = l5, color = "Orange") +
# Optionally add your elev object if it's an sf object
geom_sf(data = elev, color = "black") +
theme(legend.position = "right")  # Adjust legend position if needed
ggplot(data = streamAsPts_sf) +
geom_sf(aes(fill = elevation)) +  # Use the 'elevation' column for coloring
labs(title = "Elevation Plot") +
theme_minimal()
ggplot(data = streamAsPts_sf,) +
geom_sf(aes(fill = elevation)) +  # Change 'elevation' to your actual column name
scale_fill_viridis_c(option = "plasma", name = "Elevation (m)", guide = "colorbar") +  # Adjust color scale
theme_minimal(base_size = 36) +  # Set base size for text
labs(title = "Elevation (m)") +
geom_sf(data = l3, color = "Green") +  # Adjust to your lines' aesthetics
geom_sf(data = l4, color = "Red") +
geom_sf(data = l4b, color = "Blue") +
geom_sf(data = l5, color = "Orange") +
# Optionally add your elev object if it's an sf object
geom_sf(data = elev, color = "black") +
theme(legend.position = "right")  # Adjust legend position if needed
ggplot(data = streamAsPts_sf,) +
geom_sf(aes(fill = elevation)) +  # Change 'elevation' to your actual column name
scale_fill_viridis_c(option = "plasma", name = "Elevation (m)", guide = "colorbar") +  # Adjust color scale
theme_minimal(base_size = 36) +  # Set base size for text
labs(title = "Elevation (m)") +
geom_sf(data = l3, color = "green") +  # Adjust to your lines' aesthetics
geom_sf(data = l4, color = "red") +
geom_sf(data = l4b, color = "blue") +
geom_sf(data = l5, color = "orange") +
# Optionally add your elev object if it's an sf object
geom_sf(data = elev, color = "black") +
theme(legend.position = "right")  # Adjust legend position if needed
ggplot(data = streamAsPts_sf) +
geom_sf(aes(fill = elevation)) +  # Change 'elevation' to your actual column name
scale_fill_viridis_c(option = "plasma", name = "Elevation (m)", guide = "colorbar") +  # Adjust color scale
theme_minimal(base_size = 36) +  # Set base size for text
labs(title = "Elevation (m)") +
geom_sf(data = l3, color = "green") +  # Adjust to your lines' aesthetics
geom_sf(data = l4, color = "red") +
geom_sf(data = l4b, color = "blue") +
geom_sf(data = l5, color = "orange") +
# Optionally add your elev object if it's an sf object
geom_sf(data = elev, color = "black") +
theme(legend.position = "right")  # Adjust legend position if needed
dev.off()
ggplot(data = streamAsPts_sf) +
geom_sf(aes(fill = elevation)) +  # Change 'elevation' to your actual column name
# scale_fill_viridis_c(option = "plasma", name = "Elevation (m)", guide = "colorbar") +  # Adjust color scale
theme_minimal(base_size = 36) +  # Set base size for text
labs(title = "Elevation (m)") +
geom_sf(data = l3, color = "green") +  # Adjust to your lines' aesthetics
geom_sf(data = l4, color = "red") +
geom_sf(data = l4b, color = "blue") +
geom_sf(data = l5, color = "orange") +
# Optionally add your elev object if it's an sf object
geom_sf(data = elev, color = "black") +
theme(legend.position = "right")  # Adjust legend position if needed
ggplot(data = streamAsPts_sf) +
geom_sf(aes(fill = elevation)) +  # Change 'elevation' to your actual column name
# scale_fill_viridis_c(option = "plasma", name = "Elevation (m)", guide = "colorbar") +  # Adjust color scale
theme_minimal(base_size = 36) +  # Set base size for text
labs(title = "Elevation (m)")
library(sp)
spplot(streamAsPts.rg["elevation"],
sp.layout=list(l3, l4, l4b, l5, elev), #, huc, elev),
main=list(label="Elevation (m)", cex=1),
colorkey=T, cex=1, par.settings=list(fontsize=list(text=36)))
str(streamAsPts.rg)
plot(streamAsPts.rg["elevation"])
plot(elv, add=T)
str(elv)
str(elev)
ggplot(data=streamAsPts.rg["elevation"])+geom_sf()
# using ggplot and sf
ggplot(data=streamAsPts.rg["elevation"])+geom_sf() +
geom_sf(data=l3)
str(streamAsPts.rg["elevation"])
str(l3)
# using ggplot and sf
ggplot(data=streamAsPts.rg["elevation"])+geom_sf() +
geom_sf(data=l3["elevation"])
l3_sf <- st_as_sf(l3)
?st_as_sf()
library(sf)
sp.layout()
?sp.layout()
??sp.layout()
l3
l4
?geom_sf()
# using ggplot and sf
ggplot(data=streamAsPts.rg["elevation"])+geom_sf() +
geom_sf(data=HUC.rg)
# using ggplot and sf
ggplot(data=streamAsPts.rg["elevation"])+geom_sf() +
geom_sf(data=elev1980.nad83)
# using ggplot and sf
ggplot()+geom_sf(data=elev1980.nad83)
# using ggplot and sf
ggplot()+geom_sf(data=elev1980.nad83) +
geom_sf(data=streamAsPts.rg["elevation"]) +
dev.off()
# using ggplot and sf
ggplot()+geom_sf(data=elev1980.nad83) +
geom_sf(data=streamAsPts.rg["elevation"])
# using ggplot and sf
ggplot(data=streamAsPts.rg["elevation"])+geom_sf(data=elev1980.nad83)
# using ggplot and sf
ggplot(data=streamAsPts.rg["elevation"]) +
geom_sf()
# using ggplot and sf
ggplot(data=streamAsPts.rg["elevation"])+geom_sf()
# using ggplot and sf
ggplot(data=streamAsPts.rg["elevation"]) + geom_sf()
png("/Volumes/CPW_Work/Optimum Sampling/Ark_Sampling_bwa_test/EDA/elevations.png",
width=1024, height=768)
spplot(streamAsPts.rg["elevation"],
sp.layout=list(l3, l4, l4b, l5, elev), #, huc, elev),
main=list(label="Elevation (m)", cex=1),
colorkey=T, cex=1, par.settings=list(fontsize=list(text=36)))
# using the sf package
plot(streamAsPts.rg["elevation"])
# using ggplot and sf
ggplot(data=streamAsPts.rg["elevation"]) + geom_sf()
# Map of stream sizes
all_sites.sp <- all_sites
all_sites.sp$PURG <- as.factor(ifelse(all_sites.sp$PURG==0, "NO", "YES"))
all_sites.sp$FTN <- as.factor(ifelse(all_sites.sp$FTN==0, "NO", "YES"))
all_sites.sp$MAIN <- as.factor(ifelse(all_sites.sp$MAIN==0, "NO", "YES"))
all_sites.sp$UNCONNECT <- as.factor(ifelse(all_sites.sp$UNCONNECT==0,
"CONNECTED", "UNCONNECTED"))
coordinates(all_sites.sp) <- c("UTMX", "UTMY")
proj4string(all_sites.sp) <- CRS("+proj=utm +zone=13 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0")
all_sites.sp$streamF <- as.factor(all_sites.sp$StreamSize)
png("/Volumes/CPW_Work/Optimum Sampling/Ark_Sampling_bwa_test/EDA/streamsize.png",
width=1024, height=768)
spplot(all_sites.sp["streamF"],
sp.layout=list(l3, l4, l4b, l5, elev),
main=list(label="Strahler-type stream size", cex=1),
col.regions=rev(heat.colors(6)),
#      col.regions=brewer.pal(4, "YlGn"), cex=1,
key.space="right", #auto.key=list(cex=3),
par.settings=list(fontsize=list(text=36)))
dev.off()
spplot(all_sites.sp["streamF"],
# sp.layout=list(l3, l4, l4b, l5, elev),
main=list(label="Strahler-type stream size", cex=1),
col.regions=rev(heat.colors(6)),
#      col.regions=brewer.pal(4, "YlGn"), cex=1,
key.space="right", #auto.key=list(cex=3),
par.settings=list(fontsize=list(text=36)))
spplot(streamAsPts.rg["elevation"],
# sp.layout=list(l3, l4, l4b, l5, elev), #, huc, elev),
main=list(label="Elevation (m)", cex=1),
colorkey=T, cex=1, par.settings=list(fontsize=list(text=36)))
spplot(all_sites.sp["CROPS"],
sp.layout=list(l3, l4, l4b, l5, elev),
main=list(label="Proportion cropland", cex=1),
colorkey=T, cex=1, par.settings=list(fontsize=list(text=36)))
spplot(all_sites.sp["CROPS"],
# sp.layout=list(l3, l4, l4b, l5, elev),
main=list(label="Proportion cropland", cex=1),
colorkey=T, cex=1, par.settings=list(fontsize=list(text=36)))
str(streamAsPts.rg)
?spplot()
library(sp)
?spplot()
sp::plot()
spplot(as_Spatial(streamAsPts.rg["elevation"]),
# sp.layout=list(l3, l4, l4b, l5, elev), #, huc, elev),
main=list(label="Elevation (m)", cex=1),
colorkey=T, cex=1, par.settings=list(fontsize=list(text=36)))
spplot(as_Spatial(streamAsPts.rg["elevation"]),
sp.layout=list(l3, l4, l4b, l5, elev), #, huc, elev),
main=list(label="Elevation (m)", cex=1),
colorkey=T, cex=1, par.settings=list(fontsize=list(text=36)))
l5
spplot(as_Spatial(streamAsPts.rg["elevation"]),
sp.layout=list(l4, l4b, l5, elev), #, huc, elev),
main=list(label="Elevation (m)", cex=1),
colorkey=T, cex=1, par.settings=list(fontsize=list(text=36)))
spplot(as_Spatial(streamAsPts.rg["elevation"]),
# sp.layout=list(l4, l4b, l5, elev), #, huc, elev),
main=list(label="Elevation (m)", cex=1),
colorkey=T, cex=1, par.settings=list(fontsize=list(text=36)))
spplot(as_Spatial(streamAsPts.rg["elevation"]),
sp.layout=list(l3, l4, l4b, l5, elev), #, huc, elev),
main=list(label="Elevation (m)", cex=1),
colorkey=T, cex=1, par.settings=list(fontsize=list(text=36)))
png("/Volumes/CPW_Work/Optimum Sampling/Ark_Sampling_bwa_test/EDA/elevations.png",
width=1024, height=768)
spplot(as_Spatial(streamAsPts.rg["elevation"]),
sp.layout=list(l3, l4, l4b, l5, elev), #, huc, elev),
main=list(label="Elevation (m)", cex=1),
colorkey=T, cex=1, par.settings=list(fontsize=list(text=36)))
dev.off()
dev.off()
spplot(as_Spatial(streamAsPts.rg["elevation"]),
sp.layout=list(l3, l4, l4b, l5, elev), #, huc, elev),
main=list(label="Elevation (m)", cex=1),
colorkey=T, cex=1, par.settings=list(fontsize=list(text=36)))
